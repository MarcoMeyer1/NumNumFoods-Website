@page "/update-stock"
@inject HttpClient Http
@inject NavigationManager Navigation

<div class="update-stock-container">
    <h1>Update Stock</h1>

    <div class="stock-update-form">
        <label for="product">Product Name</label>
        <select id="product" @bind="selectedProduct">
            @foreach (var product in productList)
            {
                <option value="@product">@product</option>
            }
        </select>

        <label for="location">Location</label>
        <select id="location" @bind="selectedLocation">
            @foreach (var location in locationList)
            {
                <option value="@location">@location</option>
            }
        </select>

        <label for="quantity">New Quantity</label>
        <input type="number" id="quantity" placeholder="Enter new quantity" @bind="updatedQuantity" />

        <div class="button-container">
            <button class="update-stock-button" @onclick="UpdateStockValue">Update Stock</button>
            <button class="cancel-button" @onclick="CancelUpdate">Cancel</button>
        </div>
    </div>
</div>

@code {
    private List<string> productList = new();
    private List<string> locationList = new();
    private List<StockItem> stockList = new();

    private string selectedProduct { get; set; }
    private string selectedLocation { get; set; }
    private int updatedQuantity { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadStockData();
    }

    private async Task LoadStockData()
    {
        try
        {
            stockList = await Http.GetFromJsonAsync<List<StockItem>>("https://numnumfoods-api.azurewebsites.net/api/stock/getAll");
            productList = stockList.Select(s => s.Product).Distinct().ToList();
            locationList = stockList.Select(s => s.Location).Distinct().ToList();

            // Set default selections
            selectedProduct = productList.FirstOrDefault();
            selectedLocation = locationList.FirstOrDefault();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading stock data: {ex.Message}");
        }
    }

    private async Task UpdateStockValue()
    {
        try
        {
            var stockItem = stockList.FirstOrDefault(s => s.Product == selectedProduct && s.Location == selectedLocation);
            if (stockItem != null)
            {
                stockItem.Quantity = updatedQuantity;

                // Update status based on quantity
                stockItem.Status = updatedQuantity <= 10 ? "Low on Stock" : "In Stock";

                var response = await Http.PutAsJsonAsync($"https://numnumfoods-api.azurewebsites.net/api/stock/update/{stockItem.Id}", stockItem);

                if (response.IsSuccessStatusCode)
                {
                    Console.WriteLine($"Stock for {selectedProduct} in {selectedLocation} updated to {updatedQuantity}.");
                    Navigation.NavigateTo("/manage-stock");
                }
                else
                {
                    Console.WriteLine("Error updating stock item.");
                }
            }
            else
            {
                Console.WriteLine("Stock item not found.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error updating stock: {ex.Message}");
        }
    }

    private void CancelUpdate()
    {
        Navigation.NavigateTo("/manage-stock");
    }

    // StockItem class
    public class StockItem
    {
        public int Id { get; set; }
        public string Product { get; set; }
        public string Location { get; set; }
        public int Quantity { get; set; }
        public string Status { get; set; }
    }
}
