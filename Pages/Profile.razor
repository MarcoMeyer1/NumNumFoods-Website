@page "/profile"
@inject NavigationManager Navigation
@using NumNumFoods.Services
@inject UserState UserState
@using NumNumFoods.Models
@using NumNumFoods.Services
@inject IJSRuntime JSRuntime


<div class="profile-container">
    <div class="profile-box">
        <div class="profile-header">
            @if (UserState.IsLoggedIn) // Check if the user is logged in
            {
                <img src="/Assets/ProfileIcon.png" alt="Profile Icon" class="profile-img" />
                <div class="profile-info">
                    <h2>@UserState.UserFullName</h2> <!-- Display user's full name -->
                    <p>@UserState.UserEmail</p> <!-- Display user's email -->
                </div>
            }
            else
            {
                <div class="login-container">
                    <div class="login-prompt">
                        <h2>Please log in</h2>
                        <button class="login-button" @onclick="NavigateToLogin">Log In</button> <!-- Log In button -->
                    </div>
                </div>
            }
        </div>
        <hr class="profile-divider" />
        @if (UserState.IsLoggedIn) // Show profile options only if logged in
        {
            <div class="profile-options">
                <a href="/profile-settings" class="profile-item">
                    <i class="fas fa-cog"></i> Profile Settings
                </a>
                <a href="/profile/billing-information" class="profile-item">
                    <i class="fas fa-credit-card"></i> Billing Information
                </a>
                <a href="/profile/orderhistory" class="profile-item">
                    <i class="fas fa-history"></i> Order History
                </a>
                <a href="/security" class="profile-item">
                    <i class="fas fa-lock"></i> Security
                </a>
                <a href="#" @onclick="LogoutUser" class="profile-item logout">
                    <i class="fas fa-sign-out-alt"></i> Log Out
                </a>
            </div>
        }
    </div>
</div>

@code {
    private async Task LogoutUser()
    {
        // Trigger the logout in UserState
        UserState.Logout();

        // Optionally, clear session data from JSRuntime directly (if not handled in UserState)
        await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "userState");
        await JSRuntime.InvokeVoidAsync("sessionStorage.removeItem", "userRole");

    }
        private void NavigateToLogin()
        {
            Navigation.NavigateTo("/login");
        }
    }

}