@page "/login"
@using System.Text.Json
@inject HttpClient Http
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@using NumNumFoods.Models
@using NumNumFoods.Services
@inject UserState UserState

<div class="login-page">
    <!-- Left Side (Image Section) -->
    <div class="login-left">
        <div class="logo-container">
            <img src="Assets/numnumfoods-logo.png" alt="NumNum Logo" class="logo" />
        </div>
        <div class="image-container">
            <img src="Assets/login-background.jpg" alt="Background Image" class="background-image" />
        </div>
    </div>

    <!-- Right Side (Form Section) -->
    <div class="login-right">
        <h2 class="login-title">Login</h2>

        @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <div class="error-message">
                <p>@ErrorMessage</p>
            </div>
        }

        <div class="login-form">
            <label for="email">Username or email</label>
            <input type="text" id="email" @bind="Email" placeholder="Username or email" />

            <label for="password">Password</label>
            <input type="password" id="password" @bind="Password" placeholder="Password" />

            <div class="remember-me">
                <input type="checkbox" id="remember-me" @bind="RememberMe" />
                <label for="remember-me">Remember me</label>
            </div>

            <button @onclick="LoginUser" class="login-button">Login</button>

            <a href="/forgot-password" class="forgot-password">Forgot password?</a>

            <div class="register-link">
                <p>Don't have an account? <a href="/register">Register now!</a></p>
            </div>

            <div class="or-divider">
                <span>or</span>
            </div>

            <button class="google-login">
                <img src="Assets/google_logo-google_icongoogle-512.png" alt="Google Icon" />
                Continue with Google
            </button>

            <button class="apple-login">
                <img src="Assets/Apple Icon.png" alt="Apple Icon" />
                Continue with Apple
            </button>
        </div>
    </div>
</div>

@code {
    private string Email { get; set; } = string.Empty;
    private string Password { get; set; } = string.Empty;
    private bool RememberMe { get; set; } = false;
    private string ErrorMessage { get; set; } = string.Empty;

    private async Task LoginUser()
    {
        var loginData = new { Email, Password };

        try
        {
            var response = await Http.PostAsJsonAsync("https://numnumfoods-api.azurewebsites.net/api/authentication/login", loginData);

            if (response.IsSuccessStatusCode)
            {
                var loginResponse = await response.Content.ReadFromJsonAsync<LoginResponse>();

                // Debugging: Output the received login response
                Console.WriteLine("Login response received:");
                Console.WriteLine(JsonSerializer.Serialize(loginResponse));

                // Debugging: Output the UserId
                Console.WriteLine($"Logged in user ID: {loginResponse.User.UserId}");

                UserState.SetUser(loginResponse.User.UserId, loginResponse.User.FullName, loginResponse.User.Email, loginResponse.User.Role);

                // Optionally, store user info in local storage for persistence
                await JSRuntime.InvokeVoidAsync("localStorage.setItem", "userState", JsonSerializer.Serialize(UserState));
                await JSRuntime.InvokeVoidAsync("sessionStorage.setItem", "userRole", loginResponse.User.Role);

                // Redirect the user to the homepage after successful login
                Navigation.NavigateTo("/");
            }
            else
            {
                var errorResponse = await response.Content.ReadAsStringAsync();
                ErrorMessage = $"Login failed: {errorResponse}";
                Console.WriteLine($"Login failed: {errorResponse}"); // Debugging
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = "An error occurred during login.";
            Console.WriteLine($"Exception in LoginUser: {ex.Message}"); // Debugging
        }
    }

    public class LoginResponse
    {
        public User User { get; set; }
        public string Token { get; set; }
    }

    public class User
    {
        public int UserId { get; set; } // Ensure UserId is included
        public string FullName { get; set; }
        public string Email { get; set; }
        public string Role { get; set; }
        // Other properties as needed
    }
}
