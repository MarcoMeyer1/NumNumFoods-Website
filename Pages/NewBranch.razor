@page "/new-branch"
@inject NavigationManager Navigation

<h1 class="title">Add New Branch</h1>

<div class="new-branch-form-container">
    <div class="form-group">
        <label for="branchName">Branch Name</label>
        <input type="text" id="branchName" @bind="newBranch.Name" placeholder="Enter branch name" />
    </div>

    <div class="form-group">
        <label for="address">Address</label>
        <input type="text" id="address" @bind="newBranch.Address" placeholder="Enter branch address" />
    </div>

    <div class="form-group">
        <label for="city">City</label>
        <input type="text" id="city" @bind="newBranch.City" placeholder="Enter city" />
    </div>

    <div class="form-group">
        <label for="state">State</label>
        <input type="text" id="state" @bind="newBranch.State" placeholder="Enter state" />
    </div>

    <div class="form-group">
        <label for="zipCode">Zip Code</label>
        <input type="text" id="zipCode" @bind="newBranch.ZipCode" placeholder="Enter zip code" />
    </div>

    <div class="form-group">
        <label for="phoneNumber">Phone Number</label>
        <input type="text" id="phoneNumber" @bind="newBranch.PhoneNumber" placeholder="Enter phone number" />
    </div>

    <div class="button-group">
        <button class="save-button" @onclick="AddNewBranch">Save Branch</button>
        <button class="cancel-button" @onclick="Cancel">Cancel</button>
    </div>
</div>

@code {
    // Branch model that matches the SQL table structure
    private Branch newBranch = new Branch();

    // Function to handle adding a new branch
    private void AddNewBranch()
    {
        // This is where you'd normally add the new branch to the database
        // You can simulate this for now or connect it to your service

        Console.WriteLine($"Branch Added: {newBranch.Name}, {newBranch.Address}, {newBranch.City}, {newBranch.State}, {newBranch.ZipCode}, {newBranch.PhoneNumber}");

        // After adding, navigate back to the branches list
        Navigation.NavigateTo("/branchlocations");
    }

    private void Cancel()
    {
        // Cancel the operation and go back to the branch locations page
        Navigation.NavigateTo("/branchlocations");
    }

    // Branch class that matches your SQL structure
    private class Branch
    {
        public string Name { get; set; }
        public string Address { get; set; }
        public string City { get; set; }
        public string State { get; set; }
        public string ZipCode { get; set; }
        public string PhoneNumber { get; set; }
    }
}
