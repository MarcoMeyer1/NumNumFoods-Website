@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@using NumNumFoods.Services
@inject UserState UserState

<nav class="navbar navbar-expand-lg navbar-dark bg-pink">
    <div class="container-fluid">
        <a class="navbar-brand" href="/">NumNumFoods</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav me-auto">
                <li class="nav-item">
                    <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">Home</NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="products">Our Products</NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="login">Login</NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="register">Register</NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="weather">Weather</NavLink>
                </li>


                @if (UserState.Role == "admin")
                {
                    <li class="nav-item">
                        <NavLink class="nav-link" href="/admin-dashboard">Admin Dashboard</NavLink>
                    </li>
                }
            </ul>
        </div>
    </div>
</nav>

@code {
    protected override void OnInitialized()
    {
        UserState.OnChange += StateHasChanged; // Subscribe to changes
    }

    public void Dispose()
    {
        UserState.OnChange -= StateHasChanged; // Unsubscribe to avoid memory leaks
    }
}