@page "/reset-password"
@inject HttpClient Http
@inject NavigationManager Navigation
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.WebUtilities

<div class="reset-password-container">
    <h3>Reset Password</h3>

    @if (string.IsNullOrEmpty(token))
    {
        <p class="message invalid-token">Invalid token.</p>
    }
    else if (!string.IsNullOrEmpty(message))
    {
        <p class="message">@message</p>
    }
    else
    {
        <EditForm Model="model" OnValidSubmit="HandleValidSubmit" class="reset-form">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="newPassword">New Password:</label>
                <InputText @bind-Value="model.NewPassword" type="password" id="newPassword" class="input-field" />
            </div>

            <div class="form-group">
                <label for="confirmPassword">Confirm Password:</label>
                <InputText @bind-Value="model.ConfirmPassword" type="password" id="confirmPassword" class="input-field" />
            </div>

            <div class="reset-button-container">
                <button type="submit" class="reset-button">Reset Password</button>
            </div>
        </EditForm>
    }
</div>

@code {
    private string token;
    private ResetPasswordRequest model = new ResetPasswordRequest();
    private string message;

    protected override void OnInitialized()
    {
        var uri = Navigation.ToAbsoluteUri(Navigation.Uri);
        var query = QueryHelpers.ParseQuery(uri.Query);

        if (query.TryGetValue("token", out var tokenValue))
        {
            token = tokenValue;
            model.Token = token;
        }
        else
        {
            token = null;
        }
    }

    private async Task HandleValidSubmit()
    {
        if (model.NewPassword != model.ConfirmPassword)
        {
            message = "Passwords do not match.";
            return;
        }

        var response = await Http.PostAsJsonAsync("https://numnumfoods-api.azurewebsites.net/api/account/reset-password", model);
        if (response.IsSuccessStatusCode)
        {
            message = "Your password has been reset successfully.";
            // Optionally redirect to login page
            // Navigation.NavigateTo("/login");
        }
        else
        {
            var errorContent = await response.Content.ReadAsStringAsync();
            message = $"Error: {errorContent}";
        }
    }

    public class ResetPasswordRequest
    {
        public string Token { get; set; }
        public string NewPassword { get; set; }
        public string ConfirmPassword { get; set; } // Add ConfirmPassword property
    }
}